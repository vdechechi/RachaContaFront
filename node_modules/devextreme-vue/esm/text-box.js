/*!
 * devextreme-vue
 * Version: 24.1.4
 * Build date: Mon Jul 15 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

import TextBox from "devextreme/ui/text_box";
import { createComponent } from "./core/index";
import { createConfigurationComponent } from "./core/index";
const DxTextBox = createComponent({
    props: {
        accessKey: String,
        activeStateEnabled: Boolean,
        buttons: Array,
        disabled: Boolean,
        elementAttr: Object,
        focusStateEnabled: Boolean,
        height: [Function, Number, String],
        hint: String,
        hoverStateEnabled: Boolean,
        inputAttr: {},
        isDirty: Boolean,
        isValid: Boolean,
        label: String,
        labelMode: String,
        mask: String,
        maskChar: String,
        maskInvalidMessage: String,
        maskRules: {},
        maxLength: [Number, String],
        mode: String,
        name: String,
        onChange: Function,
        onContentReady: Function,
        onCopy: Function,
        onCut: Function,
        onDisposing: Function,
        onEnterKey: Function,
        onFocusIn: Function,
        onFocusOut: Function,
        onInitialized: Function,
        onInput: Function,
        onKeyDown: Function,
        onKeyUp: Function,
        onOptionChanged: Function,
        onPaste: Function,
        onValueChanged: Function,
        placeholder: String,
        readOnly: Boolean,
        rtlEnabled: Boolean,
        showClearButton: Boolean,
        showMaskMode: String,
        spellcheck: Boolean,
        stylingMode: String,
        tabIndex: Number,
        text: String,
        useMaskedValue: Boolean,
        validationError: {},
        validationErrors: Array,
        validationMessageMode: String,
        validationMessagePosition: String,
        validationStatus: String,
        value: String,
        valueChangeEvent: String,
        visible: Boolean,
        width: [Function, Number, String]
    },
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:accessKey": null,
        "update:activeStateEnabled": null,
        "update:buttons": null,
        "update:disabled": null,
        "update:elementAttr": null,
        "update:focusStateEnabled": null,
        "update:height": null,
        "update:hint": null,
        "update:hoverStateEnabled": null,
        "update:inputAttr": null,
        "update:isDirty": null,
        "update:isValid": null,
        "update:label": null,
        "update:labelMode": null,
        "update:mask": null,
        "update:maskChar": null,
        "update:maskInvalidMessage": null,
        "update:maskRules": null,
        "update:maxLength": null,
        "update:mode": null,
        "update:name": null,
        "update:onChange": null,
        "update:onContentReady": null,
        "update:onCopy": null,
        "update:onCut": null,
        "update:onDisposing": null,
        "update:onEnterKey": null,
        "update:onFocusIn": null,
        "update:onFocusOut": null,
        "update:onInitialized": null,
        "update:onInput": null,
        "update:onKeyDown": null,
        "update:onKeyUp": null,
        "update:onOptionChanged": null,
        "update:onPaste": null,
        "update:onValueChanged": null,
        "update:placeholder": null,
        "update:readOnly": null,
        "update:rtlEnabled": null,
        "update:showClearButton": null,
        "update:showMaskMode": null,
        "update:spellcheck": null,
        "update:stylingMode": null,
        "update:tabIndex": null,
        "update:text": null,
        "update:useMaskedValue": null,
        "update:validationError": null,
        "update:validationErrors": null,
        "update:validationMessageMode": null,
        "update:validationMessagePosition": null,
        "update:validationStatus": null,
        "update:value": null,
        "update:valueChangeEvent": null,
        "update:visible": null,
        "update:width": null,
    },
    model: { prop: "value", event: "update:value" },
    computed: {
        instance() {
            return this.$_instance;
        }
    },
    beforeCreate() {
        this.$_WidgetClass = TextBox;
        this.$_hasAsyncTemplate = true;
        this.$_expectedChildren = {
            button: { isCollectionItem: true, optionName: "buttons" }
        };
    }
});
const DxButton = createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:location": null,
        "update:name": null,
        "update:options": null,
    },
    props: {
        location: String,
        name: String,
        options: Object
    }
});
DxButton.$_optionName = "buttons";
DxButton.$_isCollectionItem = true;
DxButton.$_expectedChildren = {
    options: { isCollectionItem: false, optionName: "options" }
};
const DxOptions = createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:accessKey": null,
        "update:activeStateEnabled": null,
        "update:bindingOptions": null,
        "update:disabled": null,
        "update:elementAttr": null,
        "update:focusStateEnabled": null,
        "update:height": null,
        "update:hint": null,
        "update:hoverStateEnabled": null,
        "update:icon": null,
        "update:onClick": null,
        "update:onContentReady": null,
        "update:onDisposing": null,
        "update:onInitialized": null,
        "update:onOptionChanged": null,
        "update:rtlEnabled": null,
        "update:stylingMode": null,
        "update:tabIndex": null,
        "update:template": null,
        "update:text": null,
        "update:type": null,
        "update:useSubmitBehavior": null,
        "update:validationGroup": null,
        "update:visible": null,
        "update:width": null,
    },
    props: {
        accessKey: String,
        activeStateEnabled: Boolean,
        bindingOptions: Object,
        disabled: Boolean,
        elementAttr: Object,
        focusStateEnabled: Boolean,
        height: [Function, Number, String],
        hint: String,
        hoverStateEnabled: Boolean,
        icon: String,
        onClick: Function,
        onContentReady: Function,
        onDisposing: Function,
        onInitialized: Function,
        onOptionChanged: Function,
        rtlEnabled: Boolean,
        stylingMode: String,
        tabIndex: Number,
        template: {},
        text: String,
        type: String,
        useSubmitBehavior: Boolean,
        validationGroup: String,
        visible: Boolean,
        width: [Function, Number, String]
    }
});
DxOptions.$_optionName = "options";
export default DxTextBox;
export { DxTextBox, DxButton, DxOptions };
