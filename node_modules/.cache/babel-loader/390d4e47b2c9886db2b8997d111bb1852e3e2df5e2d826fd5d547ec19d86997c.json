{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport DxForm, { DxItem, DxLabel, DxButtonItem, DxButtonOptions, DxRequiredRule, DxEmailRule } from 'devextreme-vue/form';\nimport DxLoadIndicator from 'devextreme-vue/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport auth from \"../auth\";\nconst notificationText = 'We\\'ve sent a link to reset your password. Check your inbox.';\nexport default {\n  components: {\n    DxForm,\n    DxItem,\n    DxLabel,\n    DxButtonItem,\n    DxButtonOptions,\n    DxRequiredRule,\n    DxEmailRule,\n    DxLoadIndicator\n  },\n  setup() {\n    const router = useRouter();\n    const loading = ref(false);\n    const formData = reactive({\n      email: \"\"\n    });\n    async function onSubmit() {\n      const {\n        email\n      } = formData;\n      loading.value = true;\n      const result = await auth.resetPassword(email);\n      loading.value = false;\n      if (result.isOk) {\n        router.push(\"/login-form\");\n        notify(notificationText, \"success\", 2500);\n      } else {\n        notify(result.message, \"error\", 2000);\n      }\n    }\n    return {\n      loading,\n      formData,\n      onSubmit\n    };\n  }\n};","map":{"version":3,"names":["DxForm","DxItem","DxLabel","DxButtonItem","DxButtonOptions","DxRequiredRule","DxEmailRule","DxLoadIndicator","notify","ref","reactive","useRouter","auth","notificationText","components","setup","router","loading","formData","email","onSubmit","value","result","resetPassword","isOk","push","message"],"sources":["C:\\Users\\vinic\\OneDrive\\√Årea de Trabalho\\racha-conta\\front\\src\\views\\reset-password-form.vue"],"sourcesContent":["<template>\n  <form class=\"reset-password-form\" @submit.prevent=\"onSubmit\">\n    <dx-form :form-data=\"formData\" :disabled=\"loading\">\n      <dx-item\n        data-field=\"email\"\n        editor-type=\"dxTextBox\"\n        :editor-options=\"{ stylingMode: 'filled', placeholder: 'Email', mode: 'email' }\"\n      >\n        <dx-required-rule message=\"Email is required\" />\n        <dx-email-rule message=\"Email is invalid\" />\n        <dx-label :visible=\"false\" />\n      </dx-item>\n      <dx-button-item>\n        <dx-button-options\n          :element-attr=\"{ class: 'submit-button' }\"\n          width=\"100%\"\n          type=\"default\"\n          template=\"resetTemplate\"\n          :use-submit-behavior=\"true\"\n        >\n        </dx-button-options>\n      </dx-button-item>\n      <dx-item>\n        <template #default>\n          <div class=\"login-link\">\n            Return to <router-link to=\"/login-form\">Sign In</router-link>\n          </div>\n        </template>\n      </dx-item>\n      <template #resetTemplate>\n        <div>\n          <span class=\"dx-button-text\">\n              <dx-load-indicator v-if=\"loading\" width=\"24px\" height=\"24px\" :visible=\"true\" />\n              <span v-if=\"!loading\">Reset my password</span>\n          </span>\n        </div>\n      </template>\n    </dx-form>\n  </form>\n</template>\n\n<script>\nimport DxForm, {\n  DxItem,\n  DxLabel,\n  DxButtonItem,\n  DxButtonOptions,\n  DxRequiredRule,\n  DxEmailRule\n} from 'devextreme-vue/form';\nimport DxLoadIndicator from 'devextreme-vue/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\n\nimport auth from \"../auth\";\n\nconst notificationText = 'We\\'ve sent a link to reset your password. Check your inbox.';\n\nexport default {\n  components: {\n    DxForm,\n    DxItem,\n    DxLabel,\n    DxButtonItem,\n    DxButtonOptions,\n    DxRequiredRule,\n    DxEmailRule,\n    DxLoadIndicator\n  },\n  setup() {\n    const router = useRouter();\n\n    const loading = ref(false);\n    const formData = reactive({\n      email:\"\"\n    });\n\n    async function onSubmit() {\n      const { email } = formData;\n      loading.value = true;\n\n      const result = await auth.resetPassword(email);\n      loading.value = false;\n\n      if (result.isOk) {\n        router.push(\"/login-form\");\n        notify(notificationText, \"success\", 2500);\n      } else {\n        notify(result.message, \"error\", 2000);\n      }\n    }\n\n    return { \n      loading,\n      formData,\n      onSubmit\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../themes/generated/variables.base.scss\";\n\n.reset-password-form {\n  .submit-button {\n    margin-top: 10px;\n  }\n\n  .login-link {\n    color: $base-accent;\n    font-size: 16px;\n    text-align: center;\n  }\n}\n</style>\n"],"mappings":";AA0CA,OAAOA,MAAM,IACXC,MAAM,EACNC,OAAO,EACPC,YAAY,EACZC,eAAe,EACfC,cAAc,EACdC,WAAU,QACL,qBAAqB;AAC5B,OAAOC,eAAc,MAAO,+BAA+B;AAC3D,OAAOC,MAAK,MAAO,sBAAsB;AACzC,SAASC,GAAG,EAAEC,QAAO,QAAS,KAAK;AACnC,SAASC,SAAQ,QAAS,YAAY;AAEtC,OAAOC,IAAG,MAAO,SAAS;AAE1B,MAAMC,gBAAe,GAAI,8DAA8D;AAEvF,eAAe;EACbC,UAAU,EAAE;IACVd,MAAM;IACNC,MAAM;IACNC,OAAO;IACPC,YAAY;IACZC,eAAe;IACfC,cAAc;IACdC,WAAW;IACXC;EACF,CAAC;EACDQ,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIL,SAAS,CAAC,CAAC;IAE1B,MAAMM,OAAM,GAAIR,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMS,QAAO,GAAIR,QAAQ,CAAC;MACxBS,KAAK,EAAC;IACR,CAAC,CAAC;IAEF,eAAeC,QAAQA,CAAA,EAAG;MACxB,MAAM;QAAED;MAAM,IAAID,QAAQ;MAC1BD,OAAO,CAACI,KAAI,GAAI,IAAI;MAEpB,MAAMC,MAAK,GAAI,MAAMV,IAAI,CAACW,aAAa,CAACJ,KAAK,CAAC;MAC9CF,OAAO,CAACI,KAAI,GAAI,KAAK;MAErB,IAAIC,MAAM,CAACE,IAAI,EAAE;QACfR,MAAM,CAACS,IAAI,CAAC,aAAa,CAAC;QAC1BjB,MAAM,CAACK,gBAAgB,EAAE,SAAS,EAAE,IAAI,CAAC;MAC3C,OAAO;QACLL,MAAM,CAACc,MAAM,CAACI,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC;MACvC;IACF;IAEA,OAAO;MACLT,OAAO;MACPC,QAAQ;MACRE;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}