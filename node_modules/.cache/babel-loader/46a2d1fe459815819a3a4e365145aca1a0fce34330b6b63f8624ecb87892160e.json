{"ast":null,"code":"import DxButton from 'devextreme-vue/button';\nimport CreateEvent from \"../components/create-event.vue\";\nimport axios from 'axios';\nexport default {\n  name: \"EventsPage\",\n  components: {\n    DxButton,\n    CreateEvent\n  },\n  data() {\n    return {\n      events: [],\n      popupVisible: false\n    };\n  },\n  methods: {\n    // Método para abrir o popup de criar evento\n    openPopUp() {\n      this.popupVisible = true;\n    },\n    // Método para deletar um evento pelo ID\n    deleteEvent(id) {\n      axios.delete(`http://localhost:3000/deleta_evento/${id}`).then(response => {\n        console.log(response.data);\n        alert('Evento deletado com sucesso!');\n        this.loadEvents(); // Atualiza a lista de eventos após a deleção\n      }).catch(error => {\n        console.error('Ocorreu um erro ao deletar o evento:', error);\n      });\n    },\n    // Carregar eventos\n    loadEvents() {\n      axios.get(\"http://localhost:3000/consulta_evento\").then(response => {\n        this.events = response.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    // Método para fechar o popup\n    closePopUp() {\n      this.popupVisible = false;\n    }\n  },\n  mounted() {\n    this.loadEvents(); // Carregar eventos ao montar o componente\n  }\n};","map":{"version":3,"names":["DxButton","CreateEvent","axios","name","components","data","events","popupVisible","methods","openPopUp","deleteEvent","id","delete","then","response","console","log","alert","loadEvents","catch","error","get","err","closePopUp","mounted"],"sources":["C:\\Users\\vinic\\OneDrive\\Área de Trabalho\\racha-conta\\front\\src\\views\\events-page.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <div class=\"container\">\n      <div class=\"dx-card header responsive-paddings\">\n        <DxButton\n          :width=\"240\"\n          text=\"Criar Evento\"\n          type=\"success\"\n          styling-mode=\"contained\"\n          @click=\"openPopUp\"\n        />\n      </div>\n      <div class=\"dx-card events responsive-paddings\">\n        <div class=\"buttons-events\" v-for=\"(event, index) in events\" :key=\"index\">\n          <DxButton\n            :width=\"240\"\n            :text=\"event.title\"\n            type=\"normal\"\n            styling-mode=\"contained\"\n            class=\"button_title\"\n          />\n          \n          <!-- Botão para deletar o evento -->\n          <DxButton\n            :width=\"40\"\n            text=\"X\"\n            type=\"danger\"\n            styling-mode=\"contained\"\n            @click=\"deleteEvent(event.id)\" \n          />\n        </div>\n      </div>\n    </div>\n    <CreateEvent v-model:popupVisible=\"popupVisible\" />\n  </div>\n</template>\n\n<script>\nimport DxButton from 'devextreme-vue/button';\nimport CreateEvent from \"../components/create-event.vue\";\nimport axios from 'axios';\n\nexport default {\n  name: \"EventsPage\",\n\n  components: {\n    DxButton,\n    CreateEvent\n  },\n\n  data() {\n    return {\n      events: [],\n      popupVisible: false\n    };\n  },\n\n  methods: {\n    // Método para abrir o popup de criar evento\n    openPopUp() {\n      this.popupVisible = true;\n    },\n\n    // Método para deletar um evento pelo ID\n    deleteEvent(id) {\n      axios.delete(`http://localhost:3000/deleta_evento/${id}`)\n        .then(response => {\n          console.log(response.data);\n          alert('Evento deletado com sucesso!');\n          this.loadEvents(); // Atualiza a lista de eventos após a deleção\n        })\n        .catch(error => {\n          console.error('Ocorreu um erro ao deletar o evento:', error);\n        });\n    },\n\n    // Carregar eventos\n    loadEvents() {\n      axios.get(\"http://localhost:3000/consulta_evento\")\n        .then(response => {\n          this.events = response.data;\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n\n    // Método para fechar o popup\n    closePopUp() {\n      this.popupVisible = false;\n    }\n  },\n\n  mounted() {\n    this.loadEvents(); // Carregar eventos ao montar o componente\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n}\n\n.dx-card {\n  background-color: #535353;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.buttons-events {\n  margin-bottom: 10px;\n}\n\n.app {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.infos {\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n}\n\n.button_title {\n  margin-right: 5px;\n}\n</style>\n"],"mappings":"AAsCA,OAAOA,QAAO,MAAO,uBAAuB;AAC5C,OAAOC,WAAU,MAAO,gCAAgC;AACxD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAElBC,UAAU,EAAE;IACVJ,QAAQ;IACRC;EACF,CAAC;EAEDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACP;IACAC,SAASA,CAAA,EAAG;MACV,IAAI,CAACF,YAAW,GAAI,IAAI;IAC1B,CAAC;IAED;IACAG,WAAWA,CAACC,EAAE,EAAE;MACdT,KAAK,CAACU,MAAM,CAAC,uCAAuCD,EAAE,EAAE,EACrDE,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACT,IAAI,CAAC;QAC1BY,KAAK,CAAC,8BAA8B,CAAC;QACrC,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE;MACrB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdL,OAAO,CAACK,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D,CAAC,CAAC;IACN,CAAC;IAED;IACAF,UAAUA,CAAA,EAAG;MACXhB,KAAK,CAACmB,GAAG,CAAC,uCAAuC,EAC9CR,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACR,MAAK,GAAIQ,QAAQ,CAACT,IAAI;MAC7B,CAAC,EACAc,KAAK,CAACG,GAAE,IAAK;QACZP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAClB,CAAC,CAAC;IACN,CAAC;IAED;IACAC,UAAUA,CAAA,EAAG;MACX,IAAI,CAAChB,YAAW,GAAI,KAAK;IAC3B;EACF,CAAC;EAEDiB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACN,UAAU,CAAC,CAAC,EAAE;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}