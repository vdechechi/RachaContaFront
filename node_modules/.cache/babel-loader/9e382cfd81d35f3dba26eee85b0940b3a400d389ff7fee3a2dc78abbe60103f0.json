{"ast":null,"code":"import DxButton from 'devextreme-vue/button';\nimport CreateEvent from \"../components/create-event.vue\";\nimport { DxPopup } from 'devextreme-vue/popup';\nimport axios from 'axios';\nexport default {\n  name: \"EventsPage\",\n  components: {\n    DxButton,\n    CreateEvent,\n    DxPopup\n  },\n  data() {\n    return {\n      events: [],\n      popupVisible: false,\n      confirmDeletePopupVisible: false,\n      // Controle da visibilidade do popup de confirmação\n      eventIdToDelete: null // Armazena o ID do evento a ser deletado\n    };\n  },\n  methods: {\n    openPopUp() {\n      this.popupVisible = true;\n    },\n    // Método para abrir o popup de confirmação\n    confirmDelete(id) {\n      this.eventIdToDelete = id; // Armazena o ID do evento que será deletado\n      this.confirmDeletePopupVisible = true; // Exibe o popup\n    },\n    // Método para realmente deletar o evento\n    deleteEvent() {\n      axios.delete(`http://localhost:3000/deleta_evento/${this.eventIdToDelete}`).then(response => {\n        console.log(response.data);\n        this.fetchEvents(); // Atualiza a lista de eventos\n        this.closeDeletePopup(); // Fecha o popup de confirmação\n      }).catch(error => {\n        console.error('Ocorreu um erro ao deletar o evento:', error);\n      });\n    },\n    // Fecha o popup de exclusão\n    closeDeletePopup() {\n      this.confirmDeletePopupVisible = false;\n      this.eventIdToDelete = null; // Reseta o ID\n    },\n    fetchEvents() {\n      axios.get(\"http://localhost:3000/consulta_evento\").then(response => {\n        this.events = response.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    closePopUp() {\n      this.popupVisible = false;\n      this.fetchEvents();\n    }\n  },\n  mounted() {\n    this.fetchEvents(); // Carrega os eventos quando o componente é montado\n  }\n};","map":{"version":3,"names":["DxButton","CreateEvent","DxPopup","axios","name","components","data","events","popupVisible","confirmDeletePopupVisible","eventIdToDelete","methods","openPopUp","confirmDelete","id","deleteEvent","delete","then","response","console","log","fetchEvents","closeDeletePopup","catch","error","get","err","closePopUp","mounted"],"sources":["C:\\Users\\vinic\\OneDrive\\Área de Trabalho\\racha-conta\\front\\src\\views\\events-page.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <div class=\"container\">\n      <div class=\"dx-card header responsive-paddings\">\n        <DxButton\n          :width=\"240\"\n          text=\"Criar Evento\"\n          type=\"success\"\n          styling-mode=\"contained\"\n          @click=\"openPopUp\"\n        />\n      </div>\n      <div class=\"dx-card events responsive-paddings\">\n        <div class=\"buttons-events\" v-for=\"(event, index) in events\" :key=\"index\">\n          <DxButton\n            :width=\"240\"\n            :text=\"event.title\"\n            type=\"normal\"\n            styling-mode=\"contained\"\n            class=\"button_title\"\n          />\n\n          <DxButton\n            :width=\"50\"\n            text=\"X\"\n            type=\"danger\"\n            styling-mode=\"contained\"\n            @click=\"confirmDelete(event.id)\" \n          />\n        </div>\n      </div>\n    </div>\n\n    <!-- Popup de confirmação para deletar o evento -->\n    <DxPopup\n      :visible=\"confirmDeletePopupVisible\"\n      :drag-enabled=\"false\"\n      :hide-on-outside-click=\"false\"\n      :show-close-button=\"true\"\n      :width=\"400\"\n      :height=\"200\"\n      title=\"Confirmar Exclusão\"\n    >\n      <div class=\"popup-content\">\n        <p>Tem certeza que deseja excluir este evento?</p>\n        <DxButton\n          text=\"Sim, excluir\"\n          type=\"danger\"\n          styling-mode=\"contained\"\n          @click=\"deleteEvent\"  \n        />\n        <DxButton\n          text=\"Cancelar\"\n          type=\"normal\"\n          styling-mode=\"contained\"\n          @click=\"closeDeletePopup\"\n        />\n      </div>\n    </DxPopup>\n\n    <CreateEvent v-model:popupVisible=\"popupVisible\" @eventoCriado=\"fetchEvents\" />\n\n  </div>\n</template>\n\n<script>\nimport DxButton from 'devextreme-vue/button';\nimport CreateEvent from \"../components/create-event.vue\";\nimport { DxPopup } from 'devextreme-vue/popup';\nimport axios from 'axios';\n\nexport default {\n  name: \"EventsPage\",\n\n  components: {\n    DxButton,\n    CreateEvent,\n    DxPopup\n  },\n\n  data() {\n    return {\n      events: [],\n      popupVisible: false,\n      confirmDeletePopupVisible: false,  // Controle da visibilidade do popup de confirmação\n      eventIdToDelete: null  // Armazena o ID do evento a ser deletado\n    };\n  },\n\n  methods: {\n    openPopUp() {\n      this.popupVisible = true;\n    },\n\n    // Método para abrir o popup de confirmação\n    confirmDelete(id) {\n      this.eventIdToDelete = id;  // Armazena o ID do evento que será deletado\n      this.confirmDeletePopupVisible = true;  // Exibe o popup\n    },\n\n    // Método para realmente deletar o evento\n    deleteEvent() {\n      axios.delete(`http://localhost:3000/deleta_evento/${this.eventIdToDelete}`)\n        .then(response => {\n          console.log(response.data);\n          this.fetchEvents();  // Atualiza a lista de eventos\n          this.closeDeletePopup();  // Fecha o popup de confirmação\n        })\n        .catch(error => {\n          console.error('Ocorreu um erro ao deletar o evento:', error);\n        });\n    },\n\n    // Fecha o popup de exclusão\n    closeDeletePopup() {\n      this.confirmDeletePopupVisible = false;\n      this.eventIdToDelete = null;  // Reseta o ID\n    },\n\n    fetchEvents() {\n      axios.get(\"http://localhost:3000/consulta_evento\")\n        .then(response => {\n          this.events = response.data;\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n\n    closePopUp() {\n      this.popupVisible = false;\n      this.fetchEvents()\n    }\n  },\n\n  mounted() {\n    this.fetchEvents(); // Carrega os eventos quando o componente é montado\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n}\n\n.dx-card {\n  background-color: #535353;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.buttons-events {\n  margin-bottom: 10px;\n}\n\n.app {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.popup-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n}\n\n.button_title {\n  margin-right: 5px;\n}\n</style>\n"],"mappings":"AAkEA,OAAOA,QAAO,MAAO,uBAAuB;AAC5C,OAAOC,WAAU,MAAO,gCAAgC;AACxD,SAASC,OAAM,QAAS,sBAAsB;AAC9C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAElBC,UAAU,EAAE;IACVL,QAAQ;IACRC,WAAW;IACXC;EACF,CAAC;EAEDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,YAAY,EAAE,KAAK;MACnBC,yBAAyB,EAAE,KAAK;MAAG;MACnCC,eAAe,EAAE,IAAG,CAAG;IACzB,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACJ,YAAW,GAAI,IAAI;IAC1B,CAAC;IAED;IACAK,aAAaA,CAACC,EAAE,EAAE;MAChB,IAAI,CAACJ,eAAc,GAAII,EAAE,EAAG;MAC5B,IAAI,CAACL,yBAAwB,GAAI,IAAI,EAAG;IAC1C,CAAC;IAED;IACAM,WAAWA,CAAA,EAAG;MACZZ,KAAK,CAACa,MAAM,CAAC,uCAAuC,IAAI,CAACN,eAAe,EAAE,EACvEO,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACZ,IAAI,CAAC;QAC1B,IAAI,CAACe,WAAW,CAAC,CAAC,EAAG;QACrB,IAAI,CAACC,gBAAgB,CAAC,CAAC,EAAG;MAC5B,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdL,OAAO,CAACK,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D,CAAC,CAAC;IACN,CAAC;IAED;IACAF,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACb,yBAAwB,GAAI,KAAK;MACtC,IAAI,CAACC,eAAc,GAAI,IAAI,EAAG;IAChC,CAAC;IAEDW,WAAWA,CAAA,EAAG;MACZlB,KAAK,CAACsB,GAAG,CAAC,uCAAuC,EAC9CR,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACX,MAAK,GAAIW,QAAQ,CAACZ,IAAI;MAC7B,CAAC,EACAiB,KAAK,CAACG,GAAE,IAAK;QACZP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAClB,CAAC,CAAC;IACN,CAAC;IAEDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACnB,YAAW,GAAI,KAAK;MACzB,IAAI,CAACa,WAAW,CAAC;IACnB;EACF,CAAC;EAEDO,OAAOA,CAAA,EAAG;IACR,IAAI,CAACP,WAAW,CAAC,CAAC,EAAE;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}