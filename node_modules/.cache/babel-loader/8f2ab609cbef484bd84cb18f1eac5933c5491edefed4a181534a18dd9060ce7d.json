{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport DxForm, { DxItem, DxLabel, DxButtonItem, DxButtonOptions, DxCustomRule, DxRequiredRule } from 'devextreme-vue/form';\nimport DxLoadIndicator from 'devextreme-vue/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ref, reactive } from \"vue\";\nimport auth from \"../auth\";\nexport default {\n  components: {\n    DxForm,\n    DxItem,\n    DxLabel,\n    DxButtonItem,\n    DxButtonOptions,\n    DxRequiredRule,\n    DxCustomRule,\n    DxLoadIndicator\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const recoveryCode = ref(\"\");\n    const loading = ref(false);\n    const formData = reactive({\n      password: \"\"\n    });\n    recoveryCode.value = route.params.recoveryCode;\n    async function onSubmit() {\n      const {\n        password\n      } = formData;\n      loading.value = true;\n      const result = await auth.changePassword(password, recoveryCode.value);\n      loading.value = false;\n      if (result.isOk) {\n        router.push(\"/login-form\");\n      } else {\n        notify(result.message, 'error', 2000);\n      }\n    }\n    function confirmPassword(e) {\n      return e.value === formData.password;\n    }\n    return {\n      loading,\n      formData,\n      onSubmit,\n      confirmPassword\n    };\n  }\n};","map":{"version":3,"names":["DxForm","DxItem","DxLabel","DxButtonItem","DxButtonOptions","DxCustomRule","DxRequiredRule","DxLoadIndicator","notify","useRouter","useRoute","ref","reactive","auth","components","setup","router","route","recoveryCode","loading","formData","password","value","params","onSubmit","result","changePassword","isOk","push","message","confirmPassword","e"],"sources":["C:\\Users\\vinic\\OneDrive\\√Årea de Trabalho\\racha-conta\\front\\src\\views\\change-password-form.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"onSubmit\">\n    <dx-form :form-data=\"formData\" :disabled=\"loading\">\n      <dx-item\n        data-field=\"password\"\n        editor-type=\"dxTextBox\"\n        :editor-options=\"{ stylingMode: 'filled', placeholder: 'Password', mode: 'password' }\"\n      >\n        <dx-required-rule message=\"Password is required\" />\n        <dx-label :visible=\"false\" />\n      </dx-item>\n      <dx-item\n        data-field=\"confirmedPassword\"\n        editor-type=\"dxTextBox\"\n        :editor-options=\"{ stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' }\"\n      >\n        <dx-required-rule message=\"Password is required\" />\n        <dx-custom-rule\n          message=\"Passwords do not match\"\n          :validation-callback=\"confirmPassword\"\n        />\n        <dx-label :visible=\"false\" />\n      </dx-item>\n      <dx-button-item>\n        <dx-button-options\n          width=\"100%\"\n          type=\"default\"\n          template=\"changePassword\"\n          :use-submit-behavior=\"true\"\n        >\n        </dx-button-options>\n      </dx-button-item>\n\n      <template #changePassword>\n        <div>\n          <span class=\"dx-button-text\">\n              <dx-loadIndicator v-if=\"loading\" width=\"24px\" height=\"24px\" :visible=\"true\" />\n              <span v-if=\"!loading\">Continue</span>\n          </span>\n        </div>\n      </template>\n    </dx-form>\n  </form>\n</template>\n\n<script>\nimport DxForm, {\n  DxItem,\n  DxLabel,\n  DxButtonItem,\n  DxButtonOptions,\n  DxCustomRule,\n  DxRequiredRule\n} from 'devextreme-vue/form';\nimport DxLoadIndicator from 'devextreme-vue/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ref, reactive } from \"vue\";\n\nimport auth from \"../auth\";\n\nexport default {\ncomponents: {\n    DxForm,\n    DxItem,\n    DxLabel,\n    DxButtonItem,\n    DxButtonOptions,\n    DxRequiredRule,\n    DxCustomRule,\n    DxLoadIndicator\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n\n    const recoveryCode = ref(\"\");\n    const loading = ref(false);\n    const formData = reactive({\n      password:\"\"\n    });\n\n    recoveryCode.value = route.params.recoveryCode;\n\n    async function onSubmit() {\n      const { password } = formData;\n      loading.value = true;\n  \n      const result = await auth.changePassword(password, recoveryCode.value);\n      loading.value = false;\n  \n      if (result.isOk) {\n        router.push(\"/login-form\");\n      } else {\n        notify(result.message, 'error', 2000);\n      }\n    }\n\n    function confirmPassword (e) {\n      return e.value === formData.password;\n    }\n\n    return {\n      loading,\n      formData,\n      onSubmit,\n      confirmPassword\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":";AA8CA,OAAOA,MAAM,IACXC,MAAM,EACNC,OAAO,EACPC,YAAY,EACZC,eAAe,EACfC,YAAY,EACZC,cAAa,QACR,qBAAqB;AAC5B,OAAOC,eAAc,MAAO,+BAA+B;AAC3D,OAAOC,MAAK,MAAO,sBAAsB;AACzC,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAY;AAChD,SAASC,GAAG,EAAEC,QAAO,QAAS,KAAK;AAEnC,OAAOC,IAAG,MAAO,SAAS;AAE1B,eAAe;EACfC,UAAU,EAAE;IACRd,MAAM;IACNC,MAAM;IACNC,OAAO;IACPC,YAAY;IACZC,eAAe;IACfE,cAAc;IACdD,YAAY;IACZE;EACF,CAAC;EACDQ,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIP,SAAS,CAAC,CAAC;IAC1B,MAAMQ,KAAI,GAAIP,QAAQ,CAAC,CAAC;IAExB,MAAMQ,YAAW,GAAIP,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMQ,OAAM,GAAIR,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMS,QAAO,GAAIR,QAAQ,CAAC;MACxBS,QAAQ,EAAC;IACX,CAAC,CAAC;IAEFH,YAAY,CAACI,KAAI,GAAIL,KAAK,CAACM,MAAM,CAACL,YAAY;IAE9C,eAAeM,QAAQA,CAAA,EAAG;MACxB,MAAM;QAAEH;MAAS,IAAID,QAAQ;MAC7BD,OAAO,CAACG,KAAI,GAAI,IAAI;MAEpB,MAAMG,MAAK,GAAI,MAAMZ,IAAI,CAACa,cAAc,CAACL,QAAQ,EAAEH,YAAY,CAACI,KAAK,CAAC;MACtEH,OAAO,CAACG,KAAI,GAAI,KAAK;MAErB,IAAIG,MAAM,CAACE,IAAI,EAAE;QACfX,MAAM,CAACY,IAAI,CAAC,aAAa,CAAC;MAC5B,OAAO;QACLpB,MAAM,CAACiB,MAAM,CAACI,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC;MACvC;IACF;IAEA,SAASC,eAAcA,CAAGC,CAAC,EAAE;MAC3B,OAAOA,CAAC,CAACT,KAAI,KAAMF,QAAQ,CAACC,QAAQ;IACtC;IAEA,OAAO;MACLF,OAAO;MACPC,QAAQ;MACRI,QAAQ;MACRM;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}