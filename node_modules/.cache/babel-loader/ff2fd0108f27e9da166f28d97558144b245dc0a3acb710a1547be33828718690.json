{"ast":null,"code":"import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"menu-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_dx_tree_view = _resolveComponent(\"dx-tree-view\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"dx-swatch-additional side-navigation-menu\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.forwardClick && $setup.forwardClick(...args))\n  }, [_renderSlot(_ctx.$slots, \"default\"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_dx_tree_view, {\n    ref: \"treeViewRef\",\n    items: $setup.items,\n    \"key-expr\": \"path\",\n    \"selection-mode\": \"single\",\n    \"focus-state-enabled\": false,\n    \"expand-event\": \"click\",\n    onItemClick: $setup.handleItemClick,\n    width: \"100%\"\n  }, null, 8 /* PROPS */, [\"items\", \"onItemClick\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","onClick","_cache","args","$setup","forwardClick","_renderSlot","_ctx","$slots","_createElementVNode","_hoisted_1","_createVNode","_component_dx_tree_view","ref","items","onItemClick","handleItemClick","width"],"sources":["C:\\Users\\vinic\\OneDrive\\√Årea de Trabalho\\racha-conta\\front\\src\\components\\side-nav-menu.vue"],"sourcesContent":["<template>\n  <div\n    class=\"dx-swatch-additional side-navigation-menu\"\n    @click=\"forwardClick\"\n  >\n    <slot />\n    <div class=\"menu-container\">\n      <dx-tree-view\n        ref=\"treeViewRef\"\n        :items=\"items\"\n        key-expr=\"path\"\n        selection-mode=\"single\"\n        :focus-state-enabled=\"false\"\n        expand-event=\"click\"\n        @item-click=\"handleItemClick\"\n        width=\"100%\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport DxTreeView from 'devextreme-vue/tree-view';\nimport { sizes } from '../utils/media-query';\nimport navigation from '../app-navigation';\nimport { onMounted, ref, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nexport default {\n  props: {\n    compactMode: Boolean\n  },\n  setup(props, context) {\n    const route = useRoute();\n    const router = useRouter();\n\n    const isLargeScreen = sizes()['screen-large'];\n    const items = navigation.map((item) => {\n      if(item.path && !(/^\\//.test(item.path))){\n        item.path = `/${item.path}`;\n      }\n      return {...item, expanded: isLargeScreen}\n    });\n\n    const treeViewRef = ref(null);\n\n    function forwardClick (...args) {\n      context.emit(\"click\", args);\n    }\n\n    function handleItemClick(e) {\n      if (!e.itemData.path || props.compactMode) {\n        return;\n      }\n      router.push(e.itemData.path);\n\n      const pointerEvent = e.event;\n      pointerEvent.stopPropagation();\n    }\n\n    function updateSelection () {\n      if (!treeViewRef.value || !treeViewRef.value.instance) {\n        return;\n      }\n\n      treeViewRef.value.instance.selectItem(route.path);\n      treeViewRef.value.instance.expandItem(route.path);\n    }\n\n    onMounted(() => {\n      updateSelection();\n      if (props.compactMode) {\n        treeViewRef.value.instance.collapseAll();\n      }\n    });\n\n\n    watch(\n      () => route.path,\n      () => {\n        updateSelection();\n      }\n    );\n\n    watch(\n      () => props.compactMode,\n      () => {\n        if (props.compactMode) {\n          treeViewRef.value.instance.collapseAll();\n        } else {\n          updateSelection();\n        }\n      }\n    );\n\n    return {\n      treeViewRef,\n      items,\n      forwardClick,\n      handleItemClick,\n      updateSelection\n    };\n  },\n  components: {\n    DxTreeView\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../dx-styles.scss\";\n@import \"../themes/generated/variables.additional.scss\";\n\n.side-navigation-menu {\n  display: flex;\n  flex-direction: column;\n  min-height: 100%;\n  height: 100%;\n  width: 250px !important;\n\n  .menu-container {\n    min-height: 100%;\n    display: flex;\n    flex: 1;\n\n    .dx-treeview {\n      // ## Long text positioning\n      white-space: nowrap;\n      // ##\n\n      // ## Icon width customization\n      .dx-treeview-item {\n        padding-left: 0;\n        flex-direction: row-reverse;\n\n        .dx-icon {\n          width: $side-panel-min-width !important;\n          margin: 0 !important;\n        }\n      }\n      // ##\n\n      // ## Arrow customization\n      .dx-treeview-node {\n        padding: 0 0 !important;\n      }\n\n      .dx-treeview-toggle-item-visibility {\n        right: 10px;\n        left: auto;\n      }\n\n      .dx-rtl .dx-treeview-toggle-item-visibility {\n        left: 10px;\n        right: auto;\n      }\n      // ##\n\n      // ## Item levels customization\n      .dx-treeview-node {\n        &[aria-level=\"1\"] {\n          font-weight: bold;\n          border-bottom: 1px solid $base-border-color;\n        }\n\n        &[aria-level=\"2\"] .dx-treeview-item-content {\n          font-weight: normal;\n          padding: 0 $side-panel-min-width;\n        }\n      }\n      // ##\n    }\n\n    // ## Selected & Focuced items customization\n    .dx-treeview {\n      .dx-treeview-node-container {\n        .dx-treeview-node {\n          &.dx-state-selected:not(.dx-state-focused) > .dx-treeview-item {\n            background: transparent;\n          }\n\n          &.dx-state-selected > .dx-treeview-item * {\n            color: $base-accent;\n          }\n\n          &:not(.dx-state-focused) > .dx-treeview-item.dx-state-hover {\n            background-color: lighten($base-bg, 4);\n          }\n        }\n      }\n    }\n\n    .dx-theme-generic .dx-treeview {\n      .dx-treeview-node-container\n        .dx-treeview-node.dx-state-selected.dx-state-focused\n        > .dx-treeview-item\n        * {\n        color: inherit;\n      }\n    }\n    // ##\n  }\n}\n</style>\n"],"mappings":";;EAMSA,KAAK,EAAC;AAAgB;;;uBAL7BC,mBAAA,CAiBM;IAhBJD,KAAK,EAAC,2CAA2C;IAChDE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MAEpBG,WAAA,CAAQC,IAAA,CAAAC,MAAA,cACRC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,YAAA,CASEC,uBAAA;IARAC,GAAG,EAAC,aAAa;IAChBC,KAAK,EAAEV,MAAA,CAAAU,KAAK;IACb,UAAQ,EAAC,MAAM;IACf,gBAAc,EAAC,QAAQ;IACtB,qBAAmB,EAAE,KAAK;IAC3B,cAAY,EAAC,OAAO;IACnBC,WAAU,EAAEX,MAAA,CAAAY,eAAe;IAC5BC,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}