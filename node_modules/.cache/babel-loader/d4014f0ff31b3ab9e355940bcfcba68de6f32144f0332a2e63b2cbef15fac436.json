{"ast":null,"code":"import EventsPage from './views/events-page';\nimport auth from \"./auth\";\nimport { createRouter, createWebHashHistory } from \"vue-router\";\nimport Home from \"./views/home-page\";\nimport Profile from \"./views/profile-page\";\nimport Tasks from \"./views/tasks-page\";\nimport defaultLayout from \"./layouts/side-nav-outer-toolbar\";\nimport simpleLayout from \"./layouts/single-card\";\nfunction loadView(view) {\n  return () => import( /* webpackChunkName: \"login\" */`./views/${view}.vue`);\n}\nconst router = new createRouter({\n  routes: [{\n    path: \"/home\",\n    name: \"home\",\n    meta: {\n      requiresAuth: true,\n      layout: defaultLayout\n    },\n    component: Home\n  }, {\n    path: \"/profile\",\n    name: \"profile\",\n    meta: {\n      requiresAuth: true,\n      layout: defaultLayout\n    },\n    component: Profile\n  }, {\n    path: \"/tasks\",\n    name: \"tasks\",\n    meta: {\n      requiresAuth: true,\n      layout: defaultLayout\n    },\n    component: Tasks\n  }, {\n    path: \"/login-form\",\n    name: \"login-form\",\n    meta: {\n      requiresAuth: false,\n      layout: simpleLayout,\n      title: \"Sign In\"\n    },\n    component: loadView(\"login-form\")\n  }, {\n    path: \"/reset-password\",\n    name: \"reset-password\",\n    meta: {\n      requiresAuth: false,\n      layout: simpleLayout,\n      title: \"Reset Password\",\n      description: \"Please enter the email address that you used to register, and we will send you a link to reset your password via Email.\"\n    },\n    component: loadView(\"reset-password-form\")\n  }, {\n    path: \"/create-account\",\n    name: \"create-account\",\n    meta: {\n      requiresAuth: false,\n      layout: simpleLayout,\n      title: \"Sign Up\"\n    },\n    component: loadView(\"create-account-form\")\n  }, {\n    path: \"/change-password/:recoveryCode\",\n    name: \"change-password\",\n    meta: {\n      requiresAuth: false,\n      layout: simpleLayout,\n      title: \"Change Password\"\n    },\n    component: loadView(\"change-password-form\")\n  }, {\n    path: \"/\",\n    redirect: \"/home\"\n  }, {\n    path: \"/recovery\",\n    redirect: \"/home\"\n  }, {\n    path: \"/:pathMatch(.*)*\",\n    redirect: \"/home\"\n  }, {\n    path: \"/events-page\",\n    name: \"events-page\",\n    meta: {\n      requiresAuth: true,\n      layout: defaultLayout\n    },\n    component: EventsPage\n  }],\n  history: createWebHashHistory()\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.name === \"login-form\" && auth.loggedIn()) {\n    next({\n      name: \"home\"\n    });\n  }\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!auth.loggedIn()) {\n      next({\n        name: \"login-form\",\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["EventsPage","auth","createRouter","createWebHashHistory","Home","Profile","Tasks","defaultLayout","simpleLayout","loadView","view","router","routes","path","name","meta","requiresAuth","layout","component","title","description","redirect","history","beforeEach","to","from","next","loggedIn","matched","some","record","query","fullPath"],"sources":["C:/Users/vinic/OneDrive/Área de Trabalho/racha-conta/front/src/router.js"],"sourcesContent":["import EventsPage from './views/events-page';\nimport auth from \"./auth\";\nimport { createRouter, createWebHashHistory } from \"vue-router\";\n\nimport Home from \"./views/home-page\";\nimport Profile from \"./views/profile-page\";\nimport Tasks from \"./views/tasks-page\";\nimport defaultLayout from \"./layouts/side-nav-outer-toolbar\";\nimport simpleLayout from \"./layouts/single-card\";\n\nfunction loadView(view) {\n  return () => import (/* webpackChunkName: \"login\" */ `./views/${view}.vue`)\n}\n\nconst router = new createRouter({\n  routes: [\n    {\n      path: \"/home\",\n      name: \"home\",\n      meta: {\n        requiresAuth: true,\n        layout: defaultLayout\n      },\n      component: Home\n    },\n    {\n      path: \"/profile\",\n      name: \"profile\",\n      meta: {\n        requiresAuth: true,\n        layout: defaultLayout\n      },\n      component: Profile\n    },\n    {\n      path: \"/tasks\",\n      name: \"tasks\",\n      meta: {\n        requiresAuth: true,\n        layout: defaultLayout\n      },\n      component: Tasks\n    },\n    {\n      path: \"/login-form\",\n      name: \"login-form\",\n      meta: {\n        requiresAuth: false,\n        layout: simpleLayout,\n        title: \"Sign In\"\n      },\n      component: loadView(\"login-form\")\n    },\n    {\n      path: \"/reset-password\",\n      name: \"reset-password\",\n      meta: {\n        requiresAuth: false,\n        layout: simpleLayout,\n        title: \"Reset Password\",\n        description: \"Please enter the email address that you used to register, and we will send you a link to reset your password via Email.\"\n      },\n      component: loadView(\"reset-password-form\")\n    },\n    {\n      path: \"/create-account\",\n      name: \"create-account\",\n      meta: {\n        requiresAuth: false,\n        layout: simpleLayout,\n        title: \"Sign Up\"\n      },\n      component: loadView(\"create-account-form\"),\n    },\n    {\n      path: \"/change-password/:recoveryCode\",\n      name: \"change-password\",\n      meta: {\n        requiresAuth: false,\n        layout: simpleLayout,\n        title: \"Change Password\"\n      },\n      component: loadView(\"change-password-form\")\n    },\n    {\n      path: \"/\",\n      redirect: \"/home\"\n    },\n    {\n      path: \"/recovery\",\n      redirect: \"/home\"\n    },\n    {\n      path: \"/:pathMatch(.*)*\",\n      redirect: \"/home\"\n    }, \n    {\n      path: \"/events-page\",\n      name: \"events-page\",\n      meta: {\n        requiresAuth: true,\n        layout: defaultLayout\n      },\n      component: EventsPage\n    }\n  ],\n  history: createWebHashHistory()\n});\n\nrouter.beforeEach((to, from, next) => {\n\n  if (to.name === \"login-form\" && auth.loggedIn()) {\n    next({ name: \"home\" });\n  }\n\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!auth.loggedIn()) {\n      next({\n        name: \"login-form\",\n        query: { redirect: to.fullPath }\n      });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}