{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport DxForm, { DxItem, DxLabel, DxButtonItem, DxButtonOptions, DxCustomRule, DxRequiredRule, DxEmailRule } from 'devextreme-vue/form';\nimport DxLoadIndicator from 'devextreme-vue/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { useRouter } from 'vue-router';\nimport { ref, reactive } from 'vue';\nimport auth from \"../auth\";\nexport default {\n  components: {\n    DxForm,\n    DxItem,\n    DxLabel,\n    DxButtonItem,\n    DxButtonOptions,\n    DxRequiredRule,\n    DxCustomRule,\n    DxEmailRule,\n    DxLoadIndicator\n  },\n  setup() {\n    const router = useRouter();\n    const loading = ref(false);\n    const formData = reactive({\n      email: \"\",\n      password: \"\"\n    });\n    const onSubmit = async () => {\n      const {\n        email,\n        password\n      } = formData;\n      loading.value = true;\n      const result = await auth.createAccount(email, password);\n      loading.value = false;\n      if (result.isOk) {\n        router.push(\"/login-form\");\n      } else {\n        notify(result.message, 'error', 2000);\n      }\n    };\n    function confirmPassword(e) {\n      return e.value === formData.password;\n    }\n    return {\n      formData,\n      loading,\n      onSubmit,\n      confirmPassword\n    };\n  }\n};","map":{"version":3,"names":["DxForm","DxItem","DxLabel","DxButtonItem","DxButtonOptions","DxCustomRule","DxRequiredRule","DxEmailRule","DxLoadIndicator","notify","useRouter","ref","reactive","auth","components","setup","router","loading","formData","email","password","onSubmit","value","result","createAccount","isOk","push","message","confirmPassword","e"],"sources":["C:\\Users\\vinic\\OneDrive\\√Årea de Trabalho\\racha-conta\\front\\src\\views\\create-account-form.vue"],"sourcesContent":["<template>\n  <form class=\"create-account-form\" @submit.prevent=\"onSubmit\">\n    <dx-form :form-data=\"formData\" :disabled=\"loading\">\n      <dx-item\n        data-field=\"email\"\n        editor-type=\"dxTextBox\"\n        :editor-options=\"{ stylingMode: 'filled', placeholder: 'Email', mode: 'email' }\"\n      >\n        <dx-required-rule message=\"Email is required\" />\n        <dx-email-rule message=\"Email is invalid\" />\n        <dx-label :visible=\"false\" />\n      </dx-item>\n      <dx-item\n        data-field=\"password\"\n        editor-type=\"dxTextBox\"\n        :editor-options=\"{ stylingMode: 'filled', placeholder: 'Password', mode: 'password' }\"\n      >\n        <dx-required-rule message=\"Password is required\" />\n        <dx-label :visible=\"false\" />\n      </dx-item>\n      <dx-item\n        data-field=\"confirmedPassword\"\n        editor-type=\"dxTextBox\"\n        :editor-options=\"{ stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' }\"\n      >\n        <dx-required-rule message=\"Password is required\" />\n        <dx-custom-rule\n          message=\"Passwords do not match\"\n          :validation-callback=\"confirmPassword\"\n        />\n        <dx-label :visible=\"false\" />\n      </dx-item>\n      <dx-item>\n        <template #default>\n          <div class='policy-info'>\n            By creating an account, you agree to the <router-link to=\"#\">Terms of Service</router-link> and <router-link to=\"#\">Privacy Policy</router-link>\n          </div>\n        </template>\n      </dx-item>\n      <dx-button-item>\n        <dx-button-options\n          width=\"100%\"\n          type=\"default\"\n          template=\"createAccount\"\n          :use-submit-behavior=\"true\"\n        >\n        </dx-button-options>\n      </dx-button-item>\n      <dx-item>\n        <template #default>\n          <div class=\"login-link\">\n            Have an account? <router-link to=\"/login-form\">Sign In</router-link>\n          </div>\n        </template>\n      </dx-item>\n      <template #createAccount>\n        <div>\n          <span class=\"dx-button-text\">\n              <dx-loadIndicator v-if=\"loading\" width=\"24px\" height=\"24px\" :visible=\"true\" />\n              <span v-if=\"!loading\">Create a new account</span>\n          </span>\n        </div>\n      </template>\n    </dx-form>\n  </form>\n</template>\n\n<script>\nimport DxForm, {\n  DxItem,\n  DxLabel,\n  DxButtonItem,\n  DxButtonOptions,\n  DxCustomRule,\n  DxRequiredRule,\n  DxEmailRule\n} from 'devextreme-vue/form';\nimport DxLoadIndicator from 'devextreme-vue/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { useRouter } from 'vue-router';\nimport { ref, reactive } from 'vue';\n\nimport auth from \"../auth\";\n\nexport default {\n  components: {\n    DxForm,\n    DxItem,\n    DxLabel,\n    DxButtonItem,\n    DxButtonOptions,\n    DxRequiredRule,\n    DxCustomRule,\n    DxEmailRule,\n    DxLoadIndicator\n  },\n  setup() {\n    const router = useRouter();\n    \n    const loading = ref(false);\n    const formData = reactive({\n      email:\"\",\n      password:\"\"\n    });\n\n    const onSubmit = async () => {\n    const { email, password } = formData;\n    loading.value = true;\n\n    const result = await auth.createAccount(email, password);\n    loading.value = false;\n\n    if (result.isOk) {\n      router.push(\"/login-form\");\n    } else {\n      notify(result.message, 'error', 2000);\n    }\n  };\n\n    function confirmPassword(e) {\n      return e.value === formData.password;\n    }\n    \n    return {\n        formData,\n        loading,\n        onSubmit,\n        confirmPassword\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../themes/generated/variables.base.scss\";\n\n.create-account-form {\n  .policy-info {\n    margin: 10px 0;\n    color: rgba($base-text-color, alpha($base-text-color) * 0.7);\n    font-size: 14px;\n    font-style: normal;\n\n    a {\n      color: rgba($base-text-color, alpha($base-text-color) * 0.7);\n    }\n  }\n\n  .login-link {\n    color: $base-accent;\n    font-size: 16px;\n    text-align: center;\n  }\n}\n</style>\n"],"mappings":";AAoEA,OAAOA,MAAM,IACXC,MAAM,EACNC,OAAO,EACPC,YAAY,EACZC,eAAe,EACfC,YAAY,EACZC,cAAc,EACdC,WAAU,QACL,qBAAqB;AAC5B,OAAOC,eAAc,MAAO,+BAA+B;AAC3D,OAAOC,MAAK,MAAO,sBAAsB;AACzC,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,GAAG,EAAEC,QAAO,QAAS,KAAK;AAEnC,OAAOC,IAAG,MAAO,SAAS;AAE1B,eAAe;EACbC,UAAU,EAAE;IACVd,MAAM;IACNC,MAAM;IACNC,OAAO;IACPC,YAAY;IACZC,eAAe;IACfE,cAAc;IACdD,YAAY;IACZE,WAAW;IACXC;EACF,CAAC;EACDO,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIN,SAAS,CAAC,CAAC;IAE1B,MAAMO,OAAM,GAAIN,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMO,QAAO,GAAIN,QAAQ,CAAC;MACxBO,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAC;IACX,CAAC,CAAC;IAEF,MAAMC,QAAO,GAAI,MAAAA,CAAA,KAAY;MAC7B,MAAM;QAAEF,KAAK;QAAEC;MAAS,IAAIF,QAAQ;MACpCD,OAAO,CAACK,KAAI,GAAI,IAAI;MAEpB,MAAMC,MAAK,GAAI,MAAMV,IAAI,CAACW,aAAa,CAACL,KAAK,EAAEC,QAAQ,CAAC;MACxDH,OAAO,CAACK,KAAI,GAAI,KAAK;MAErB,IAAIC,MAAM,CAACE,IAAI,EAAE;QACfT,MAAM,CAACU,IAAI,CAAC,aAAa,CAAC;MAC5B,OAAO;QACLjB,MAAM,CAACc,MAAM,CAACI,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC;MACvC;IACF,CAAC;IAEC,SAASC,eAAeA,CAACC,CAAC,EAAE;MAC1B,OAAOA,CAAC,CAACP,KAAI,KAAMJ,QAAQ,CAACE,QAAQ;IACtC;IAEA,OAAO;MACHF,QAAQ;MACRD,OAAO;MACPI,QAAQ;MACRO;IACJ;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}