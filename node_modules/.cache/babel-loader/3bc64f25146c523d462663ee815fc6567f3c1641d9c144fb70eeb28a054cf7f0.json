{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport DxLoadIndicator from \"devextreme-vue/load-indicator\";\nimport DxForm, { DxItem, DxEmailRule, DxRequiredRule, DxLabel, DxButtonItem, DxButtonOptions } from \"devextreme-vue/form\";\nimport notify from 'devextreme/ui/notify';\nimport auth from \"../auth\";\nimport { reactive, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const formData = reactive({\n      email: \"\",\n      password: \"\"\n    });\n    const loading = ref(false);\n    function onCreateAccountClick() {\n      router.push(\"/create-account\");\n    }\n    async function onSubmit() {\n      const {\n        email,\n        password\n      } = formData;\n      loading.value = true;\n      const result = await auth.logIn(email, password);\n      if (!result.isOk) {\n        loading.value = false;\n        notify(result.message, \"error\", 2000);\n      } else {\n        router.push(route.query.redirect || \"/home\");\n      }\n    }\n    return {\n      formData,\n      loading,\n      onCreateAccountClick,\n      onSubmit\n    };\n  },\n  components: {\n    DxLoadIndicator,\n    DxForm,\n    DxEmailRule,\n    DxRequiredRule,\n    DxItem,\n    DxLabel,\n    DxButtonItem,\n    DxButtonOptions\n  }\n};","map":{"version":3,"names":["DxLoadIndicator","DxForm","DxItem","DxEmailRule","DxRequiredRule","DxLabel","DxButtonItem","DxButtonOptions","notify","auth","reactive","ref","useRoute","useRouter","setup","route","router","formData","email","password","loading","onCreateAccountClick","push","onSubmit","value","result","logIn","isOk","message","query","redirect","components"],"sources":["C:\\Users\\vinic\\OneDrive\\√Årea de Trabalho\\racha-conta\\front\\src\\views\\login-form.vue"],"sourcesContent":["<template>\n  <form class=\"login-form\" @submit.prevent=\"onSubmit\">\n    <dx-form :form-data=\"formData\" :disabled=\"loading\">\n      <dx-item\n        data-field=\"email\"\n        editor-type=\"dxTextBox\"\n        :editor-options=\"{ stylingMode: 'filled', placeholder: 'Email', mode: 'email' }\"\n      >\n        <dx-required-rule message=\"Email is required\" />\n        <dx-email-rule message=\"Email is invalid\" />\n        <dx-label :visible=\"false\" />\n      </dx-item>\n      <dx-item\n        data-field='password'\n        editor-type='dxTextBox'\n        :editor-options=\"{ stylingMode: 'filled', placeholder: 'Password', mode: 'password' }\"\n      >\n        <dx-required-rule message=\"Password is required\" />\n        <dx-label :visible=\"false\" />\n      </dx-item>\n      <dx-item\n        data-field=\"rememberMe\"\n        editor-type=\"dxCheckBox\"\n        :editor-options=\"{ text: 'Remember me', elementAttr: { class: 'form-text' } }\"\n      >\n        <dx-label :visible=\"false\" />\n      </dx-item>\n      <dx-button-item>\n        <dx-button-options\n          width=\"100%\"\n          type=\"default\"\n          template=\"signInTemplate\"\n          :use-submit-behavior=\"true\"\n        >\n        </dx-button-options>\n      </dx-button-item>\n      <dx-item>\n        <template #default>\n          <div class=\"link\">\n            <router-link to=\"/reset-password\">Forgot password?</router-link>\n          </div>\n        </template>\n      </dx-item>\n      <dx-button-item>\n        <dx-button-options\n          text=\"Create an account\"\n          width=\"100%\"\n          :on-click=\"onCreateAccountClick\"\n        />\n      </dx-button-item>\n      <template #signInTemplate>\n        <div>\n          <span class=\"dx-button-text\">\n            <dx-load-indicator v-if=\"loading\" width=\"24px\" height=\"24px\" :visible=\"true\" />\n            <span v-if=\"!loading\">Sign In</span>\n          </span>\n        </div>\n      </template>\n    </dx-form>\n  </form>\n</template>\n\n<script>\nimport DxLoadIndicator from \"devextreme-vue/load-indicator\";\nimport DxForm, {\n  DxItem,\n  DxEmailRule,\n  DxRequiredRule,\n  DxLabel,\n  DxButtonItem,\n  DxButtonOptions\n} from \"devextreme-vue/form\";\nimport notify from 'devextreme/ui/notify';\n\nimport auth from \"../auth\";\n\nimport { reactive, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n\n    const formData = reactive({\n      email:\"\",\n      password:\"\"\n    });\n    const loading = ref(false);\n\n    function onCreateAccountClick() {\n      router.push(\"/create-account\");\n    }\n\n    async function onSubmit() {\n      const { email, password } = formData;\n      loading.value = true;\n      const result = await auth.logIn(email, password);\n      if (!result.isOk) {\n        loading.value = false;\n        notify(result.message, \"error\", 2000);\n      } else {\n        router.push(route.query.redirect || \"/home\");\n      }\n    }\n\n    return {\n      formData,\n      loading,\n      onCreateAccountClick,\n      onSubmit\n    };\n  },\n  components: {\n    DxLoadIndicator,\n    DxForm,\n    DxEmailRule,\n    DxRequiredRule,\n    DxItem,\n    DxLabel,\n    DxButtonItem,\n    DxButtonOptions\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../themes/generated/variables.base.scss\";\n\n.login-form {\n  .link {\n    text-align: center;\n    font-size: 16px;\n    font-style: normal;\n\n    a {\n      text-decoration: none;\n    }\n  }\n\n  .form-text {\n    margin: 10px 0;\n    color: rgba($base-text-color, alpha($base-text-color) * 0.7);\n  }\n}\n</style>\n"],"mappings":";AA+DA,OAAOA,eAAc,MAAO,+BAA+B;AAC3D,OAAOC,MAAM,IACXC,MAAM,EACNC,WAAW,EACXC,cAAc,EACdC,OAAO,EACPC,YAAY,EACZC,eAAc,QACT,qBAAqB;AAC5B,OAAOC,MAAK,MAAO,sBAAsB;AAEzC,OAAOC,IAAG,MAAO,SAAS;AAE1B,SAASC,QAAQ,EAAEC,GAAE,QAAS,KAAK;AACnC,SAASC,QAAQ,EAAEC,SAAQ,QAAS,YAAY;AAEhD,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,MAAMI,MAAK,GAAIH,SAAS,CAAC,CAAC;IAE1B,MAAMI,QAAO,GAAIP,QAAQ,CAAC;MACxBQ,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAC;IACX,CAAC,CAAC;IACF,MAAMC,OAAM,GAAIT,GAAG,CAAC,KAAK,CAAC;IAE1B,SAASU,oBAAoBA,CAAA,EAAG;MAC9BL,MAAM,CAACM,IAAI,CAAC,iBAAiB,CAAC;IAChC;IAEA,eAAeC,QAAQA,CAAA,EAAG;MACxB,MAAM;QAAEL,KAAK;QAAEC;MAAS,IAAIF,QAAQ;MACpCG,OAAO,CAACI,KAAI,GAAI,IAAI;MACpB,MAAMC,MAAK,GAAI,MAAMhB,IAAI,CAACiB,KAAK,CAACR,KAAK,EAAEC,QAAQ,CAAC;MAChD,IAAI,CAACM,MAAM,CAACE,IAAI,EAAE;QAChBP,OAAO,CAACI,KAAI,GAAI,KAAK;QACrBhB,MAAM,CAACiB,MAAM,CAACG,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC;MACvC,OAAO;QACLZ,MAAM,CAACM,IAAI,CAACP,KAAK,CAACc,KAAK,CAACC,QAAO,IAAK,OAAO,CAAC;MAC9C;IACF;IAEA,OAAO;MACLb,QAAQ;MACRG,OAAO;MACPC,oBAAoB;MACpBE;IACF,CAAC;EACH,CAAC;EACDQ,UAAU,EAAE;IACV/B,eAAe;IACfC,MAAM;IACNE,WAAW;IACXC,cAAc;IACdF,MAAM;IACNG,OAAO;IACPC,YAAY;IACZC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}